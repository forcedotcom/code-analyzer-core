module.exports = {
    rules: {
        "my-rule-1": { // Contains all information
            meta: {
                type: "suggestion",
                docs: {
                    description: "My description of my-rule-1",
                    url: "https://example.com/my-rule-1"
                },
                messages: {
                    avoidName: "Avoid using variables named '{{name}}'"
                }
            },
            create: function (context) {
                // A simple rule which prevents users from creating variables with one of the forbidden names:
                const forbiddenVarNames = ["forbidden", "ouch", "oops"];
                return {
                    Identifier(node) {
                        if (forbiddenVarNames.includes(node.name)) {
                            context.report({
                                node,
                                messageId: "avoidName",
                                data: {
                                    name: node.name
                                }
                            });
                        }
                    }
                }
            }
        },
        "my-rule-2": { // Is missing a description
            meta: {
                type: "problem",
                docs: {
                    url: "https://example.com/my-rule-2"
                }
            },
            create: function (context) {
                return {} // no-op rule
            }
        },
        "my-rule-3": { // Is missing a url
            meta: {
                type: "layout",
                docs: {
                    description: "My description of my-rule-3",
                }
            },
            create: function (context) {
                return {} // no-op rule
            }
        },
        "my-rule-4": { // Again contains all information
            meta: {
                type: "problem",
                docs: {
                    description: "My description of my-rule-4",
                    url: "https://example.com/my-rule-4"
                }
            },
            create: function (context) {
                return {} // no-op rule
            }
        },
        "my-rule-5": { // Is missing meta data and therefore should be excluded
            create: function (context) {
                return {} // no-op rule
            }
        },
        "my-rule-6": {
            meta: {
                type: "suggestion",
                docs: {
                    description: "My description of my-rule-6",
                    url: "https://example.com/my-rule-6"
                }
            },
            create: function (context) {
                return {} // no-op rule
            }
        }
    }
};