Search.setIndex({"docnames": ["flow_parser_ref", "flowtest_ref", "index", "init_flow", "intro", "public_ref", "queries_ref", "user_guide"], "filenames": ["flow_parser_ref.rst", "flowtest_ref.rst", "index.rst", "init_flow.rst", "intro.rst", "public_ref.rst", "queries_ref.rst", "user_guide.rst"], "titles": ["Flow Parser", "Flowtest module", "Flowtest documentation", "System Overview", "Problem Addressed", "Public Module", "Queries", "User Guide"], "terms": {"modul": [0, 2, 3], "xml": [0, 1, 3, 5, 6, 7], "pars": [0, 1, 2, 3, 6], "global": [0, 3, 4, 5], "attribut": [0, 1], "flow_pars": [0, 1, 3, 5], "ns_len": [0, 2, 5], "int": [0, 1, 5], "41": [0, 5], "length": [0, 5], "namespac": [0, 1, 5], "text": [0, 1, 5], "mung": 0, "class": [0, 1, 3, 5, 6], "api": [0, 1, 2, 3, 4, 5], "lexic": [0, 3], "file": [0, 1, 6], "instanc": [0, 1, 3, 5, 6], "do": [0, 1, 3, 4, 5], "contain": [0, 1, 3, 4, 5], "ani": [0, 1, 3], "branch": [0, 2, 3, 5], "depend": 0, "data": [0, 1, 2, 6], "In": [0, 1, 5], "particular": 0, "when": [0, 1, 3, 5, 6], "variabl": [0, 1, 3, 4, 5, 6], "i": [0, 1, 2, 3, 4, 5, 6, 7], "seen": [0, 1, 3], "doe": [0, 1, 4, 5, 6], "mean": [0, 1], "ha": [0, 1, 3, 4, 5, 6, 7], "been": [0, 1, 4], "initi": [0, 1, 3, 4], "ad": [0, 5, 6], "influenc": [0, 1, 3, 5, 6], "map": [0, 1, 3, 5], "must": [0, 1, 3, 5], "preced": 0, "frame": [0, 1], "state": [0, 2, 3, 5, 6], "crawler": [0, 1], "should": [0, 1, 3, 4, 5], "have": [0, 1, 3, 5], "modifi": [0, 3, 4, 6], "after": [0, 1, 4, 6], "except": [0, 1, 5], "new": [0, 1, 3, 5], "member": [0, 1], "resolut": [0, 3], "e": [0, 1, 3, 4, 5, 7], "g": [0, 1, 3, 4, 5], "account": [0, 1, 3], "foo": [0, 1, 5], "where": [0, 1, 5, 7], "alwai": [0, 1, 3], "built": [0, 6], "from_fil": 0, "method": [0, 1, 5, 6], "test": [0, 1, 6], "from_str": 0, "can": [0, 1, 3, 4, 5, 6, 7], "us": [0, 1, 3, 5, 6, 7], "sure": [0, 7], "provid": [0, 1, 4, 5, 6], "dummi": [0, 1], "filenam": [0, 1, 5, 7], "__init__": [0, 1, 5, 6], "root": [0, 1, 5, 6], "all_named_elem": 0, "option": [0, 1, 5, 6, 7], "frozenset": [0, 5], "_element": [0, 1, 5, 6], "frozen": 0, "set": [0, 1, 5], "all": [0, 1, 3, 4, 5, 6, 7], "element": [0, 1, 3, 4, 5, 6], "child": [0, 1, 5], "name": [0, 1, 3, 4, 5], "ar": [0, 1, 3, 4, 5, 6], "thu": [0, 3], "declared_run_mod": 0, "runmod": [0, 5], "run": [0, 1, 4, 5, 6, 7], "mode": [0, 4], "declar": 0, "effective_run_mod": 0, "effect": [0, 4], "take": [0, 1], "inherit": 0, "flow_path": [0, 1, 5, 6], "str": [0, 1, 5, 6], "current": [0, 1, 3, 5, 6, 7], "filepath": [0, 1], "flow_typ": 0, "flowtyp": [0, 5], "thi": [0, 1, 3, 4, 5, 6, 7], "screen": [0, 1, 5], "auto": [0, 1, 3], "launch": [0, 1, 5], "get_all_indirect_tupl": 0, "return": [0, 2, 3, 5, 6], "list": [0, 1, 3, 5, 6], "tupl": [0, 1, 5, 6], "indirect": [0, 1], "refer": [0, 1, 3, 4, 5], "elem": [0, 1, 5, 6], "The": [0, 1, 3, 5], "formula": [0, 1, 5], "templat": [0, 1, 5], "an": [0, 1, 3, 4, 5, 6, 7], "extract": [0, 5], "merg": [0, 1, 5], "field": [0, 1, 4, 5, 6], "from": [0, 1, 3, 5, 6], "type": [0, 1, 5, 6], "get_all_traversable_flow_el": 0, "ignor": [0, 5], "start": [0, 1, 3, 5, 6], "lxml": [0, 5], "etre": [0, 5], "get_by_nam": 0, "name_to_match": 0, "scope": [0, 1], "none": [0, 1, 5, 6], "first": [0, 1, 3, 5, 6], "given": [0, 1, 3, 5, 6], "paramet": [0, 1, 5, 6], "get_flow_nam": 0, "we": [0, 1, 3, 4, 5], "assum": [0, 1], "label": [0, 1, 5], "get_flow_typ": 0, "If": [0, 1, 5, 6], "determin": [0, 1, 3, 5], "get_formula": 0, "grab": 0, "empti": [0, 1, 5], "found": [0, 1, 3, 5, 6], "get_input_field_elem": [0, 5], "children": [0, 5, 7], "input": [0, 1, 3, 4, 5, 6], "rtype": [0, 1, 5], "onli": [0, 1, 5, 6], "present": [0, 1, 5], "get_input_output_elem": 0, "output": [0, 1, 3, 5], "get_input_vari": [0, 5], "path": [0, 1, 3, 5, 6, 7], "get": [0, 1, 5, 7], "avail": [0, 1, 5], "element_nam": [0, 5], "correspond": [0, 1, 5, 6], "get_run_mod": 0, "context": 0, "public": [0, 1, 2, 3, 6], "enum": [0, 2], "get_start_elem": 0, "point": [0, 1, 3, 5, 6], "startelementrefer": [0, 1], "get_templ": 0, "input_vari": 0, "mark": 0, "pair": [0, 5], "literal_var": 0, "string": [0, 1, 5], "liter": [0, 1, 5], "output_vari": [0, 5], "resolve_by_nam": 0, "strict": 0, "fals": [0, 1, 5, 7], "resolv": [0, 1, 3], "properti": [0, 1, 5], "variabletyp": [0, 1, 3, 5], "exampl": [0, 1, 4, 5], "account_var": 0, "my_subflow": 0, "vartyp": 0, "raw": [0, 1, 5], "bar": [0, 5], "baz": 0, "which": [0, 1, 3, 4, 5], "bool": [0, 1, 5], "whether": [0, 1, 3, 5, 6], "fail": [0, 1], "hard": 0, "guess": 0, "cannot": [0, 1], "els": [0, 1, 5], "tripl": 0, "parent": [0, 1, 3, 5], "singl": [0, 1, 7], "updat": [0, 1, 3, 4, 6], "old_pars": 0, "is_return": 0, "popul": [0, 1, 4, 6], "default": [0, 1, 2, 5], "valu": [0, 1, 5, 6], "old": [0, 1, 5], "copi": [0, 5], "over": [0, 1, 4], "function": [0, 5], "call": [0, 3, 5, 6], "build_vartype_from_elem": [0, 2], "build": [0, 1, 5], "purpos": 0, "assign": [0, 1, 3, 5], "order": [0, 1], "assist": [0, 1], "object": [0, 1, 2, 4, 6], "analysi": [0, 1, 3, 4, 5], "primarili": 0, "interest": [0, 1, 5], "repres": [0, 1, 5], "via": [0, 1, 3, 5], "convent": 0, "add": [0, 1, 5, 6], "t": [0, 1, 3, 5], "explicit": 0, "outputassign": 0, "you": [0, 1, 4, 5, 7], "therefor": [0, 3, 5], "attempt": 0, "creat": [0, 1, 3, 4, 5, 6, 7], "et": [0, 5], "_elem": 0, "tag": [0, 1, 5], "inform": [0, 1, 2, 3, 5], "unknown": 0, "get_root": [0, 2], "load": [0, 1, 3, 6, 7], "logger": [0, 1, 2, 5], "warn": [0, 1, 5], "n": [0, 1, 2, 5], "http": [0, 1, 5, 7], "soap": [0, 5], "sforc": [0, 5], "com": [0, 1, 5], "2006": [0, 5], "04": [0, 5], "metadata": [0, 4, 5], "hardcod": 0, "sfdc": [0, 5], "main": [1, 3], "symbol": [1, 3, 4, 5], "execut": [1, 3, 4, 5, 7], "engin": [1, 2], "entrypoint": 1, "cli": [1, 3], "check_dir_exist": 1, "x": 1, "check": [1, 5], "argument": 1, "valid": 1, "directori": [1, 4, 7], "rais": [1, 5], "argumenttypeerror": 1, "check_file_exist": 1, "exist": [1, 3], "otherwis": [1, 5], "check_not_exist": 1, "lambda": 1, "error": [1, 2, 7], "get_flow_path": 1, "arg": [1, 5], "argpars": 1, "process": [1, 3, 4, 5, 6], "flow_nam": [1, 5], "scan": [1, 6, 7], "dict": [1, 5], "argv": 1, "entri": [1, 3, 6], "command": [1, 2, 5, 7], "For": [1, 4, 5], "allow": [1, 4], "specifi": [1, 3, 5], "pass": [1, 3, 5, 6], "parse_arg": 1, "my_arg": 1, "defin": [1, 5], "uniqu": 1, "id": 1, "one": [1, 3, 5, 6], "gener": [1, 3, 4, 5, 6, 7], "complet": [1, 3, 5, 6], "so": [1, 3, 5, 6], "0": [1, 5], "program": 1, "setup_logg": 1, "level": [1, 5, 7], "log_fil": 1, "setup": 1, "log": 1, "store": [1, 3, 5], "maintain": [1, 3, 5], "each": [1, 3, 4], "crawl": [1, 3, 5], "step": [1, 3, 4, 5], "branchstat": [1, 5, 6], "under": [1, 6], "studi": 1, "expos": [1, 3, 5], "propag": [1, 3, 5], "anoth": [1, 3, 5], "author": 1, "rsussland": 1, "salesforc": [1, 2], "branch_stat": [1, 3], "track": [1, 3, 5], "dataflow": [1, 3, 5], "within": [1, 5], "being": [1, 3, 4, 5, 6], "up": [1, 5], "interact": 1, "done": [1, 3], "instanti": [1, 3, 5], "builder": [1, 4, 5], "A": [1, 3, 5], "clone": [1, 7], "made": [1, 5], "whenev": 1, "exit": [1, 5], "recov": [1, 3], "befor": [1, 4, 6], "prior": 1, "subflow": [1, 3, 4, 5, 6], "consolid": [1, 4], "parser": [1, 2, 5, 6], "add_vectors_from_other_flow": 1, "src_flow_path": 1, "output_vector_map": 1, "src2tgt_variable_map": 1, "transition_elem": 1, "push": [1, 3], "sourc": [1, 5, 6], "target": [1, 3, 5], "across": [1, 5], "boundari": 1, "src": 1, "termin": 1, "y": 1, "oper": [1, 5], "extend": [1, 5], "It": [1, 3, 7], "b": [1, 5], "As": 1, "access": [1, 5], "other": [1, 3, 5, 7], "thei": [1, 3, 5], "often": [1, 4], "need": [1, 3, 4], "mai": [1, 3, 4, 5], "scalar": 1, "src_var": 1, "And": [1, 4], "individu": [1, 3], "flowvector": 1, "current_crawl_step": 1, "crawlstep": [1, 3, 5], "current_elem": [1, 6], "current_elem_nam": 1, "conveni": [1, 5], "filter_input_vari": 1, "output_var": 1, "filter": [1, 5, 6], "remov": 1, "filter_map": 1, "those": [1, 5], "destruct": 1, "data_obj": [1, 5, 6], "keep": [1, 5], "place": 1, "packag": [1, 4], "work": [1, 2, 5, 7], "formula_map": 1, "datainfluencepath": [1, 5], "late": 1, "bind": 1, "classmethod": [1, 5], "from_pars": 1, "readi": [1, 6], "until": [1, 5], "get_all_output_vector": 1, "get_current_elem": 1, "associ": [1, 3], "": [1, 3, 5, 7], "get_current_elem_nam": 1, "get_flows_from_sourc": 1, "influenced_var": [1, 5], "source_var": 1, "all_step": 1, "find": [1, 4, 5], "origin": 1, "influencer_var": [1, 5], "unresolv": 1, "just": 1, "note": [1, 5], "handl": [1, 3], "automat": [1, 5], "forward": 1, "taint": [1, 5, 6], "var": [1, 5], "statement": [1, 5, 6], "histori": [1, 5], "collector": 1, "entir": 1, "get_or_make_vector": 1, "retriev": [1, 4], "doesn": 1, "some": [1, 5], "lookup": [1, 6], "influence_map": [1, 5], "chain": [1, 5], "get_pars": 1, "longer": 1, "is_in_map": 1, "var_nam": 1, "fulli": 1, "true": [1, 5, 6], "load_crawl_step": 1, "crawl_step": 1, "next": [1, 5], "wa": 1, "propagate_flow": 1, "type_replac": 1, "datainfluencestat": [1, 5], "graph": [1, 3], "whose": [1, 5], "want": [1, 3, 7], "addit": [1, 5, 6], "case": [1, 5], "preserv": 1, "collect": [1, 4, 5], "actual": 1, "overrid": 1, "dure": [1, 3, 4], "expert": 1, "self": [1, 3, 5], "initialization_com": 1, "comment": [1, 5], "subflow_wire_com": 1, "schedul": 1, "control_flow": [1, 3], "controlflowgraph": 1, "start_label": 1, "inbound": 1, "jump": 1, "segment_map": 1, "segment": 1, "crawlencod": 1, "obj": [1, 5], "implement": [1, 5], "subclass": [1, 5], "serializ": [1, 5], "o": [1, 5], "base": [1, 5], "typeerror": [1, 5], "support": [1, 4, 5], "arbitrari": [1, 5], "iter": [1, 5], "could": [1, 3, 5], "like": [1, 4, 5], "def": [1, 5], "try": [1, 3, 5], "let": [1, 5], "jsonencod": [1, 5], "crawlschedul": 1, "total_step": 1, "total_branch": 1, "branch_map": 1, "branchvisitor": [1, 5], "branch_count": 1, "crawl_schedul": 1, "terminal_step": 1, "history_map": 1, "constructor": [1, 5, 6], "how": [1, 2, 6], "mani": [1, 7], "end": [1, 5], "specif": [1, 6], "last": 1, "current_step": 1, "recommend": [1, 7], "get_crawl_step": 1, "get_last_ancestor": 1, "latest": 1, "ancestor": 1, "visit": 1, "know": [1, 4], "sought": 1, "total": 1, "number": [1, 3, 4, 5], "jsonserializ": 1, "connector": [1, 5], "src_name": 1, "is_goto": 1, "is_loop": [1, 5], "travers": 1, "is_termin": 1, "seen_visitor": 1, "factori": [1, 5], "accept": 1, "visitor": [1, 5], "node": 1, "also": [1, 3, 5, 7], "crawl_it": 1, "cfg": 1, "yield": 1, "outgo": 1, "get_crawl_schedul": 1, "secur": [1, 2, 4, 6], "encod": 1, "librari": [1, 6, 7], "html_encod": 1, "msg": 1, "perform": [1, 3, 5], "html": [1, 4, 7], "param": [1, 5, 6], "unicod": 1, "messag": 1, "legal_sql_escap": 1, "escap": 1, "quot": 1, "two": [1, 3, 5], "sql": 1, "standard": 1, "sql_enc_html_dec": 1, "decod": 1, "sql_escap": 1, "simpl": [1, 5], "vulner": [1, 6], "dispatch": 1, "handler": 1, "appropri": [1, 3], "follow_subflow": 1, "debug": 1, "analyz": 1, "respons": [1, 2], "happen": [1, 3, 5], "along": 1, "loop": [1, 4, 5], "decis": [1, 5], "worklist": 1, "consist": [1, 3, 5], "doubl": [1, 4], "queue": 1, "append": [1, 5, 6], "pull": [1, 3], "front": 1, "encount": [1, 3], "stack": 1, "wire_processor": 1, "obtain": [1, 3], "query_processor": 1, "look": [1, 5, 6], "sink": [1, 5, 6], "current_flow_path": 1, "all_flow_path": 1, "resolved_subflow": 1, "parent_subflow": 1, "query_manag": [1, 3], "reach": 1, "alreadi": [1, 3, 5], "spawn": 1, "querymanag": [1, 3], "child_spawn": 1, "binari": [1, 7], "semaphor": 1, "don": [1, 3, 5], "again": 1, "suppli": 1, "final": 1, "get_consolidated_output_var": 1, "possibl": [1, 3, 5], "handle_subflow": 1, "differ": [1, 5, 7], "behavior": [1, 2], "requir": [1, 4, 7], "enter": [1, 3, 5, 6], "predict": 1, "processor": [1, 3], "placehold": 1, "fast": [1, 4], "spawn_child_fram": 1, "sub_path": 1, "input_map": 1, "vector_map": 1, "surviv": 1, "These": [1, 3, 5], "filename_par": 1, "var_par": 1, "filename_child": 1, "var_child": 1, "To": [1, 7], "them": [1, 4, 5], "rememb": 1, "well": [1, 3], "begin": 1, "subflow_input_cach": 1, "cach": 1, "subflow_path": 1, "time": [1, 4], "henc": 1, "subflow_output_variable_cach": 1, "update_parent_fram": 1, "parent_fram": 1, "invoc": [1, 5], "pop": [1, 3], "root_flow_path": 1, "invok": [1, 3, 5, 6], "current_fram": 1, "onto": 1, "top": [1, 2, 5, 7], "pointer": [1, 3], "trust_carnac": 1, "reli": [1, 5], "instead": 1, "re": [1, 3, 5], "try_carnac": 1, "compar": 1, "call_carnac": 1, "input_cach": 1, "what": [1, 4, 5], "previou": 1, "parse_flow": [1, 3], "requestor": 1, "report_label": 1, "result_id": 1, "service_vers": 1, "help_url": [1, 5], "query_module_path": 1, "query_class_nam": 1, "query_preset": 1, "all_flow": 1, "filesystem": [1, 7], "meta": 1, "email": 1, "address": [1, 2], "recipi": 1, "human": 1, "readabl": [1, 6], "report": [1, 2, 4, 5, 6, 7], "job": [1, 3], "system": [1, 4], "url": 1, "displai": [1, 5], "more": [1, 3, 4, 5], "info": [1, 3], "about": [1, 3, 5], "custom": [1, 4, 5, 7], "preset": [1, 5, 6], "ger_report": 1, "python": [1, 2, 4, 5, 7], "read": 1, "flow_metr": 1, "add_to_query_config": 1, "list_of_desc": 1, "descript": 1, "config": 1, "disk": 1, "querydescript": [1, 5], "valueerror": [1, 5], "count_issu": 1, "scan_result": 1, "querydata": 1, "issu": [1, 2, 3, 7], "qualiti": 1, "count": 1, "get_issues_for_org": 1, "vuln_map": 1, "cx": 1, "storedxss": 1, "cx_desc1": 1, "cx_desc2": 1, "etc": 1, "bit": [1, 5], "ineffici": 1, "sinc": 1, "through": 1, "rather": [1, 3], "than": [1, 3], "concern": 1, "here": [1, 3, 5], "dictionari": 1, "kei": 1, "get_software_preset": 1, "preset_nam": [1, 5, 6], "softwar": [1, 4], "parse_result": 1, "xml_file": 1, "xml_report_str": 1, "report_path": [1, 7], "failed_queri": 1, "throttl": 1, "source_dir": 1, "email_add": 1, "friendly_nam": 1, "job_typ": 1, "scan_start": 1, "scan_end": 1, "3": [1, 7], "min_api_vers": 1, "40": 1, "write": [1, 4, 5], "event": 1, "pathnod": 1, "query_data": 1, "clean": 1, "occur": [1, 5], "insert": 1, "footer": 1, "written": 1, "content": 1, "gen": 1, "query_path": 1, "boolean": 1, "limit": 1, "per": [1, 5], "code": [1, 2, 3, 4, 5], "sent": 1, "friendli": 1, "tz": 1, "portal": 1, "org": [1, 7], "popcrab": 1, "trace": [1, 4], "float": 1, "flag": 1, "lightn": 1, "bundl": 1, "earlier": 1, "viewer": 1, "help": [1, 7], "job_info": 1, "reverse_map": 1, "go": 1, "1": 1, "vuln": 1, "2": 1, "serial": [1, 3], "portion": 1, "iterpars": 1, "bytestr": 1, "becaus": [1, 3], "concaten": 1, "third": [1, 5], "parti": [1, 5], "flow_result": [1, 3], "resultsprocessor": 1, "necessari": 1, "includ": [1, 4, 5, 7], "request": [1, 7], "json": [1, 7], "6": 1, "9": 1, "alpha": 1, "forc": 1, "tool": [1, 2, 4, 7], "forcecom": 1, "scannerhelp": 1, "add_result": 1, "query_result": 1, "intern": [1, 2, 3, 5], "de": [1, 3], "duplic": [1, 3], "datapath": 1, "equal": 1, "pleas": [1, 5, 7], "put": 1, "thing": 1, "timestamp": 1, "wont": 1, "dupe": 1, "queryresult": [1, 5, 6], "dump_json": 1, "fp": 1, "textio": 1, "gen_result_dict": 1, "sort": [1, 5], "bucket": 1, "compat": [1, 5], "format": [1, 7], "form": 1, "query_id": [1, 5], "query_nam": [1, 5], "human_read": 1, "counter": 1, "fake": 1, "similar": 1, "elem_nam": [1, 5], "get_cx_xml_str": 1, "convert": 1, "get_json_str": 1, "write_html": 1, "html_report_path": [1, 7], "structur": [1, 3], "algorithm": 1, "common": 1, "both": 1, "accur": [1, 4], "follow": [1, 4], "subject": 1, "case2": 1, "statu": 1, "sink1": 1, "detect": 1, "sink2": 1, "property_map": 1, "slice": 1, "add_vector": 1, "same": [1, 5], "sum": 1, "concept": 1, "overload": 1, "either": [1, 7], "combin": [1, 5], "second": [1, 5], "care": 1, "taken": 1, "imagin": 1, "sai": 1, "Then": 1, "realiti": 1, "cross": [1, 5], "contamin": 1, "chang": [1, 5], "decid": [1, 4, 5], "separ": [1, 5], "boil": 1, "down": [1, 3], "better": 1, "its": [1, 7], "opt": 1, "approach": 1, "principl": 1, "still": [1, 5], "retain": 1, "examin": [1, 4, 5], "fine": 1, "grain": 1, "exclus": 1, "choic": 1, "u": 1, "induc": 1, "natur": 1, "select": [1, 5, 6], "from_flow": 1, "influencer_nam": [1, 5], "non": 1, "null": 1, "influencer_properti": [1, 5], "outsid": [1, 4], "itself": 1, "own": [1, 3], "influenced_nam": [1, 5], "get_flows_by_prop": 1, "member_nam": 1, "index": [1, 2], "match": [1, 5], "push_via_flow": 1, "extension_path": 1, "influenced_vec": 1, "cross_flow": [1, 5], "vec": 1, "kept": [1, 5], "reassign": [1, 4, 5], "4": 1, "replac": 1, "enlarg": 1, "extens": 1, "mismatch": 1, "report_dict": 1, "brief": 1, "stringifi": 1, "arrow": [1, 5], "star": 1, "notat": 1, "short_report": [1, 5], "alphabet": 1, "schema": 1, "property_nam": 1, "indent": 1, "space": 1, "summari": [1, 5], "queryact": 1, "create_modul": 1, "module_path": 1, "queryprocessor": [1, 5], "locat": 1, "importerror": 1, "curr_dir": 1, "user": [1, 2, 3, 4, 5, 6], "dev": 1, "git": 1, "flowsecuritylint": 1, "docsrc": 1, "get_flows_in_dir": 1, "root_dir": 1, "search": [1, 2, 3, 5, 6], "recurs": [1, 5], "get_label": 1, "local": [1, 5], "would": [1, 5], "parent_dir__foo": 1, "namespaced_label": 1, "local_label": 1, "make_id": 1, "8": 1, "digit": 1, "src_type": 1, "dest_typ": 1, "leav": 1, "unless": 1, "certain": 1, "adopt": 1, "term": 1, "condit": 1, "logic": [1, 5], "now": 1, "manual": [1, 5], "resolve_nam": 1, "sub_nam": 1, "Not": 1, "tbd": 1, "complex": 1, "deserv": 1, "But": [1, 3], "compon": 1, "fulfil": 1, "recordlookup": [1, 5], "recordcr": 1, "recordupd": 1, "recorddelet": 1, "collectionprocessor": 1, "dynamicchoiceset": 1, "texttempl": 1, "constant": 1, "uncategor": 1, "stage": 1, "actioncal": 1, "handle_auto_stor": 1, "onc": [1, 5, 7], "wire_assign": 1, "wire_collection_processor": 1, "wire_loop": 1, "line": 2, "audit": [2, 4], "flow": [2, 4, 5, 6, 7], "detail": [2, 4], "overal": 2, "problem": 2, "guid": 2, "instal": 2, "usag": [2, 3], "lifecycl": 2, "queri": [2, 3, 4, 5, 7], "contract": [2, 3], "util": 2, "__main__": [2, 3], "control": [2, 3, 5, 7], "esapi": 2, "executor": [2, 3], "metric": 2, "result": [2, 3, 5, 6], "manag": [2, 3], "wire": [2, 3], "version": [2, 7], "page": 2, "thousand": 3, "flowtest": [3, 7], "basic": [3, 5], "transform": 3, "configur": 3, "referenc": 3, "heart": 3, "rest": 3, "themselv": 3, "pure": 3, "static": 3, "incomplet": 3, "__parsed_var": 3, "avoid": 3, "constantli": 3, "definit": [3, 5], "There": 3, "torn": 3, "full": [3, 5], "__resolut": 3, "split": 3, "too": 3, "inconsist": 3, "question": 3, "produc": 3, "sequenc": 3, "speak": 3, "multipl": [3, 5, 7], "never": [3, 5], "three": 3, "stricter": 3, "everi": [3, 5], "ideal": 3, "parseabl": 3, "get_all_nam": 3, "all_nam": 3, "normal": 3, "wai": 3, "appear": 3, "lazili": 3, "technic": 3, "incorrect": 3, "revisit": 3, "repeatedli": 3, "low": 4, "consum": 4, "open": 4, "click": 4, "back": 4, "inspect": 4, "even": [4, 5], "organ": 4, "accumul": 4, "larg": 4, "blackbox": 4, "d": [4, 7], "systemmod": 4, "delet": [4, 5, 6], "faultconnector": [4, 5], "freed": 4, "autom": 4, "task": 4, "developerdx": 4, "deeper": 4, "desir": 4, "moreov": 4, "tester": 4, "develop": [5, 7], "against": 5, "document": 5, "interfac": 5, "caution": 5, "ref": 5, "mod": 5, "break": 5, "upgrad": 5, "flowpars": [5, 6], "abstract": 5, "subsequ": [5, 6], "higher": 5, "make": [5, 7], "earli": 5, "formal": 5, "releas": 5, "older": 5, "backward": 5, "stai": 5, "contact": 5, "project": 5, "prefer": 5, "_method": 5, "stabl": 5, "minor": 5, "handle_crawl_el": [5, 6], "handle_fin": [5, 6], "all_stat": [5, 6], "handle_flow_ent": [5, 6], "set_preset_nam": [5, 6], "current_label": 5, "previous_label": 5, "token": 5, "between": 5, "explain": 5, "c": 5, "immut": 5, "accomplish": 5, "usual": 5, "garbag": 5, "drop": 5, "ensur": 5, "todo": 5, "influenced_properti": 5, "influenced_filepath": 5, "influencer_filepath": 5, "influenced_type_info": 5, "start_flow": 5, "end_flow": 5, "type_overrid": 5, "directli": 5, "unchang": 5, "crossflow": 5, "report_influence_tupl": 5, "high": 5, "flow_filenam": 5, "influenced_var_nam": 5, "print": 5, "short": 5, "comma": 5, "builtin": 5, "block": 5, "line_no": 5, "source_text": 5, "influencestatementencod": 5, "preset_own": 5, "sever": 5, "query_descript": 5, "query_vers": 5, "is_secur": 5, "danger": 5, "investig": 5, "togeth": 5, "influence_stat": 5, "datatyp": 5, "is_collect": 5, "is_opt": 5, "object_typ": 5, "is_input": 5, "is_output": 5, "referencetyp": 5, "conntyp": 5, "flowvalu": 5, "your": [5, 7], "consid": 5, "reason": 5, "below": 5, "goal": 5, "move": 5, "share": 5, "distinct": 5, "goe": 5, "wherea": 5, "stateless": 5, "yourself": 5, "isn": 5, "parse_util": 5, "conn_list": 5, "defaultconnector": 5, "nextvalueconnector": 5, "nomorevaluesconnector": 5, "known": 5, "default_conn": 5, "fault_connector": 5, "fault": 5, "action": 5, "next_value_connector": 5, "no_more_conn": 5, "exhaust": 5, "string_literal_token": 5, "get_assignment_statement_dict": 5, "keyword": 5, "suitabl": 5, "construct": 5, "unpack": 5, "get_by_tag": 5, "tagnam": 5, "deal": 5, "clumsi": 5, "get_conn_target_map": 5, "get_filt": 5, "get_input_assign": 5, "inputassign": 5, "get_nam": 5, "get_named_elem": 5, "descend": 5, "get_sinks_from_field_valu": 5, "elementrefer": 5, "var3": 5, "strategi": 5, "compani": 5, "cheat": 5, "op": 5, "later": [5, 7], "criteria": 5, "field_nam": 5, "get_subflow_input_map": 5, "caller": 5, "input_var1": 5, "parent_input_var": 5, "get_subflow_output_map": 5, "flow_var": 5, "is_decis": 5, "is_goto_connector": 5, "goto": 5, "parse_express": 5, "txt": 5, "express": 5, "elementref": 5, "reg": 5, "compil": 5, "regular": 5, "review": 6, "beta": 6, "product": 6, "default_queri": 6, "defaultqueryprocessor": 6, "process_el": 6, "crud": 6, "selector": 6, "process_influenc": 6, "filter_influenc": 6, "input_influenc": 6, "elem_typ": 6, "show": 6, "affect": 6, "record": 6, "runtim": [6, 7], "get_sourc": 6, "varnam": 6, "10": 7, "virtual": 7, "environ": 7, "doc": 7, "venv": 7, "insid": 7, "proper": 7, "activ": 7, "repo": 7, "pip3": 7, "sh": 7, "script": 7, "folder": 7, "json_report_path": 7, "path1": 7, "path2": 7, "path3": 7, "my_dir": 7, "f": 7, "my_flow_path": 7, "h": 7, "posit": 7, "neg": 7, "featur": 7}, "objects": {"flow_parser": [[0, 0, 0, "-", "parse"]], "flow_parser.parse": [[0, 1, 1, "", "NS_LEN"], [0, 2, 1, "", "Parser"], [0, 5, 1, "", "build_vartype_from_elem"], [0, 5, 1, "", "get_root"], [0, 1, 1, "", "logger"], [0, 1, 1, "", "ns"]], "flow_parser.parse.Parser": [[0, 3, 1, "", "__init__"], [0, 4, 1, "", "all_named_elems"], [0, 4, 1, "", "declared_run_mode"], [0, 4, 1, "", "effective_run_mode"], [0, 4, 1, "", "flow_path"], [0, 4, 1, "", "flow_type"], [0, 3, 1, "", "get_all_indirect_tuples"], [0, 3, 1, "", "get_all_traversable_flow_elements"], [0, 3, 1, "", "get_by_name"], [0, 3, 1, "", "get_flow_name"], [0, 3, 1, "", "get_flow_type"], [0, 3, 1, "", "get_formulas"], [0, 3, 1, "", "get_input_field_elems"], [0, 3, 1, "", "get_input_output_elems"], [0, 3, 1, "", "get_input_variables"], [0, 3, 1, "", "get_run_mode"], [0, 3, 1, "", "get_start_elem"], [0, 3, 1, "", "get_templates"], [0, 4, 1, "", "input_variables"], [0, 4, 1, "", "literal_var"], [0, 4, 1, "", "output_variables"], [0, 3, 1, "", "resolve_by_name"], [0, 4, 1, "", "root"], [0, 3, 1, "", "update"]], "flowtest": [[1, 0, 0, "-", "ESAPI"], [1, 0, 0, "-", "__main__"], [1, 0, 0, "-", "branch_state"], [1, 0, 0, "-", "control_flow"], [1, 0, 0, "-", "executor"], [1, 0, 0, "-", "flow_metrics"], [1, 0, 0, "-", "flow_result"], [1, 0, 0, "-", "flows"], [1, 0, 0, "-", "query_manager"], [1, 0, 0, "-", "util"], [1, 0, 0, "-", "version"], [1, 0, 0, "-", "wire"]], "flowtest.ESAPI": [[1, 5, 1, "", "html_encode"], [1, 5, 1, "", "legal_sql_escape"], [1, 5, 1, "", "sql_enc_html_dec"], [1, 5, 1, "", "sql_escape"]], "flowtest.__main__": [[1, 5, 1, "", "check_dir_exists"], [1, 5, 1, "", "check_file_exists"], [1, 5, 1, "", "check_not_exist"], [1, 5, 1, "", "get_flow_paths"], [1, 5, 1, "", "main"], [1, 5, 1, "", "parse_args"], [1, 5, 1, "", "setup_logger"]], "flowtest.branch_state": [[1, 2, 1, "", "BranchState"], [1, 1, 1, "", "INITIALIZATION_COMMENT"], [1, 1, 1, "", "SUBFLOW_WIRE_COMMENT"], [1, 1, 1, "", "logger"]], "flowtest.branch_state.BranchState": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "add_vectors_from_other_flow"], [1, 4, 1, "", "current_crawl_step"], [1, 4, 1, "", "current_elem"], [1, 4, 1, "", "current_elem_name"], [1, 3, 1, "", "filter_input_variables"], [1, 3, 1, "", "filter_maps"], [1, 4, 1, "", "flow_name"], [1, 4, 1, "", "flow_path"], [1, 4, 1, "", "formula_map"], [1, 3, 1, "", "from_parser"], [1, 3, 1, "", "get_all_output_vectors"], [1, 3, 1, "", "get_current_elem"], [1, 3, 1, "", "get_current_elem_name"], [1, 3, 1, "", "get_flows_from_sources"], [1, 3, 1, "", "get_or_make_vector"], [1, 3, 1, "", "get_parser"], [1, 3, 1, "", "is_in_map"], [1, 3, 1, "", "load_crawl_step"], [1, 4, 1, "", "parser"], [1, 3, 1, "", "propagate_flows"]], "flowtest.control_flow": [[1, 2, 1, "", "ControlFlowGraph"], [1, 2, 1, "", "CrawlEncoder"], [1, 2, 1, "", "CrawlSchedule"], [1, 2, 1, "", "Crawler"], [1, 2, 1, "", "JSONSerializable"], [1, 2, 1, "", "Jump"], [1, 2, 1, "", "Segment"], [1, 5, 1, "", "crawl_iter"], [1, 5, 1, "", "get_crawl_schedule"]], "flowtest.control_flow.ControlFlowGraph": [[1, 3, 1, "", "__init__"]], "flowtest.control_flow.CrawlEncoder": [[1, 3, 1, "", "default"]], "flowtest.control_flow.CrawlSchedule": [[1, 3, 1, "", "__init__"]], "flowtest.control_flow.Crawler": [[1, 3, 1, "", "__init__"], [1, 4, 1, "", "crawl_schedule"], [1, 4, 1, "", "current_step"], [1, 3, 1, "", "from_parser"], [1, 3, 1, "", "get_crawl_step"], [1, 3, 1, "", "get_last_ancestor"], [1, 4, 1, "", "history_maps"], [1, 4, 1, "", "terminal_steps"], [1, 4, 1, "", "total_steps"]], "flowtest.control_flow.JSONSerializable": [[1, 3, 1, "", "__init__"]], "flowtest.control_flow.Jump": [[1, 3, 1, "", "__init__"]], "flowtest.control_flow.Segment": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "accept"]], "flowtest.executor": [[1, 1, 1, "", "FOLLOW_SUBFLOWS"], [1, 2, 1, "", "Frame"], [1, 2, 1, "", "Stack"], [1, 1, 1, "", "TRUST_CARNAC"], [1, 1, 1, "", "TRY_CARNAC"], [1, 5, 1, "", "call_carnac"], [1, 1, 1, "", "logger"], [1, 5, 1, "", "parse_flow"]], "flowtest.executor.Frame": [[1, 3, 1, "", "__init__"], [1, 4, 1, "", "all_flow_paths"], [1, 3, 1, "", "build"], [1, 4, 1, "", "child_spawned"], [1, 4, 1, "", "crawler"], [1, 3, 1, "", "execute"], [1, 4, 1, "", "flow_name"], [1, 4, 1, "", "flow_path"], [1, 3, 1, "", "get_consolidated_output_vars"], [1, 3, 1, "", "handle_subflows"], [1, 4, 1, "", "inputs"], [1, 4, 1, "", "parent_subflow"], [1, 4, 1, "", "parser"], [1, 4, 1, "", "prediction"], [1, 4, 1, "", "query_manager"], [1, 4, 1, "", "resolved_subflows"], [1, 3, 1, "", "spawn_child_frame"], [1, 4, 1, "", "state"], [1, 4, 1, "", "subflow_input_cache"], [1, 4, 1, "", "subflow_output_variable_cache"], [1, 3, 1, "", "update_parent_frame"]], "flowtest.executor.Stack": [[1, 3, 1, "", "__init__"], [1, 4, 1, "", "all_flow_paths"], [1, 4, 1, "", "current_frame"], [1, 3, 1, "", "pop"], [1, 3, 1, "", "push"], [1, 4, 1, "", "query_manager"], [1, 4, 1, "", "resolved_subflows"], [1, 3, 1, "", "run"]], "flowtest.flow_metrics": [[1, 5, 1, "", "add_to_query_config"], [1, 5, 1, "", "count_issues"], [1, 5, 1, "", "get_issues_for_org"], [1, 5, 1, "", "get_software_presets"], [1, 5, 1, "", "parse_results"], [1, 5, 1, "", "reverse_map"], [1, 5, 1, "", "serialize"]], "flowtest.flow_result": [[1, 2, 1, "", "ResultsProcessor"]], "flowtest.flow_result.ResultsProcessor": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "add_results"], [1, 3, 1, "", "dump_json"], [1, 3, 1, "", "gen_result_dict"], [1, 3, 1, "", "get_cx_xml_str"], [1, 3, 1, "", "get_json_str"], [1, 3, 1, "", "write_html"]], "flowtest.flows": [[1, 2, 1, "", "FlowVector"]], "flowtest.flows.FlowVector": [[1, 3, 1, "", "__init__"], [1, 3, 1, "", "add_vector"], [1, 3, 1, "", "from_flows"], [1, 3, 1, "", "get_flows_by_prop"], [1, 3, 1, "", "push_via_flow"], [1, 3, 1, "", "report_dict"], [1, 3, 1, "", "short_report"]], "flowtest.query_manager": [[1, 2, 1, "", "QueryAction"], [1, 5, 1, "", "create_module"]], "flowtest.util": [[1, 1, 1, "", "CURR_DIR"], [1, 5, 1, "", "get_flows_in_dir"], [1, 5, 1, "", "get_label"], [1, 5, 1, "", "make_id"], [1, 5, 1, "", "propagate"], [1, 5, 1, "", "resolve_name"]], "flowtest.wire": [[1, 5, 1, "", "handle_auto_store"], [1, 1, 1, "", "logger"], [1, 5, 1, "", "wire"], [1, 5, 1, "", "wire_assignment"], [1, 5, 1, "", "wire_collection_processor"], [1, 5, 1, "", "wire_loop"]], "public": [[5, 0, 0, "-", "contracts"], [5, 0, 0, "-", "data_obj"], [5, 0, 0, "-", "enums"], [5, 0, 0, "-", "parse_utils"]], "public.contracts": [[5, 2, 1, "", "FlowParser"], [5, 2, 1, "", "QueryProcessor"], [5, 2, 1, "", "State"]], "public.contracts.FlowParser": [[5, 3, 1, "", "get_input_field_elems"], [5, 3, 1, "", "get_input_variables"]], "public.contracts.QueryProcessor": [[5, 3, 1, "", "__init__"], [5, 3, 1, "", "handle_crawl_element"], [5, 3, 1, "", "handle_final"], [5, 3, 1, "", "handle_flow_enter"], [5, 3, 1, "", "set_preset_name"]], "public.data_obj": [[5, 2, 1, "", "BranchVisitor"], [5, 2, 1, "", "CrawlStep"], [5, 2, 1, "", "DataInfluencePath"], [5, 2, 1, "", "DataInfluenceStatement"], [5, 2, 1, "", "InfluenceStatementEncoder"], [5, 2, 1, "", "Preset"], [5, 2, 1, "", "QueryDescription"], [5, 2, 1, "", "QueryResult"], [5, 2, 1, "", "VariableType"]], "public.data_obj.BranchVisitor": [[5, 3, 1, "", "__init__"]], "public.data_obj.CrawlStep": [[5, 3, 1, "", "__init__"]], "public.data_obj.DataInfluencePath": [[5, 3, 1, "", "__init__"], [5, 3, 1, "", "combine"], [5, 3, 1, "", "report_influence_tuples"], [5, 3, 1, "", "short_report"]], "public.data_obj.DataInfluenceStatement": [[5, 3, 1, "", "__init__"]], "public.data_obj.InfluenceStatementEncoder": [[5, 3, 1, "", "default"]], "public.data_obj.Preset": [[5, 3, 1, "", "__init__"]], "public.data_obj.QueryDescription": [[5, 3, 1, "", "__init__"]], "public.data_obj.QueryResult": [[5, 3, 1, "", "__init__"]], "public.data_obj.VariableType": [[5, 3, 1, "", "__init__"]], "public.enums": [[5, 2, 1, "", "ConnType"], [5, 2, 1, "", "DataType"], [5, 2, 1, "", "FlowType"], [5, 2, 1, "", "FlowValue"], [5, 2, 1, "", "ReferenceType"], [5, 2, 1, "", "RunMode"], [5, 2, 1, "", "Severity"]], "public.parse_utils": [[5, 1, 1, "", "CONNECTOR"], [5, 1, 1, "", "CONN_LIST"], [5, 1, 1, "", "DEFAULT_CONN"], [5, 1, 1, "", "FAULT_CONNECTOR"], [5, 1, 1, "", "NEXT_VALUE_CONNECTOR"], [5, 1, 1, "", "NO_MORE_CONN"], [5, 1, 1, "", "NS_LEN"], [5, 1, 1, "", "STRING_LITERAL_TOKEN"], [5, 5, 1, "", "get_assignment_statement_dicts"], [5, 5, 1, "", "get_by_tag"], [5, 5, 1, "", "get_conn_target_map"], [5, 5, 1, "", "get_filters"], [5, 5, 1, "", "get_input_assignments"], [5, 5, 1, "", "get_name"], [5, 5, 1, "", "get_named_elems"], [5, 5, 1, "", "get_sinks_from_field_values"], [5, 5, 1, "", "get_subflow_input_map"], [5, 5, 1, "", "get_subflow_output_map"], [5, 5, 1, "", "is_decision"], [5, 5, 1, "", "is_goto_connector"], [5, 5, 1, "", "is_loop"], [5, 1, 1, "", "logger"], [5, 1, 1, "", "ns"], [5, 5, 1, "", "parse_expression"], [5, 1, 1, "", "reg"]], "queries": [[6, 0, 0, "-", "default_query"]], "queries.default_query": [[6, 2, 1, "", "DefaultQueryProcessor"], [6, 5, 1, "", "get_sources"]], "queries.default_query.DefaultQueryProcessor": [[6, 3, 1, "", "__init__"], [6, 4, 1, "", "flow_paths"], [6, 3, 1, "", "handle_crawl_element"], [6, 3, 1, "", "handle_final"], [6, 3, 1, "", "handle_flow_enter"], [6, 4, 1, "", "parser"], [6, 4, 1, "", "preset"], [6, 3, 1, "", "process_element"], [6, 3, 1, "", "process_influencers"], [6, 4, 1, "", "root"], [6, 3, 1, "", "set_preset_name"], [6, 4, 1, "", "sources"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"flow": [0, 1, 3], "parser": [0, 3], "flowtest": [1, 2], "modul": [1, 5], "__main__": 1, "branch": 1, "state": 1, "control": 1, "esapi": 1, "executor": 1, "function": 1, "call": 1, "return": 1, "metric": 1, "result": 1, "ad": 1, "vector": 1, "queri": [1, 6], "manag": 1, "util": [1, 5], "wire": 1, "polici": 1, "version": 1, "document": 2, "content": 2, "indic": 2, "tabl": 2, "system": 3, "overview": 3, "object": [3, 5], "lifecycl": 3, "respons": 3, "persist": 3, "across": 3, "entir": 3, "scan": 3, "run": 3, "queryprocessor": 3, "stack": 3, "frame": 3, "singl": 3, "file": 3, "branchstat": 3, "crawler": 3, "import": 3, "data": [3, 5], "type": 3, "cach": 3, "method": 3, "problem": 4, "address": 4, "how": 4, "work": 4, "public": 5, "contract": 5, "enum": 5, "pars": 5, "default": 6, "user": 7, "guid": 7, "instal": 7, "usag": 7}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Flow Parser": [[0, "module-flow_parser.parse"]], "Flowtest module": [[1, "flowtest-module"]], "__main__": [[1, "main"]], "Branch State": [[1, "branch-state"]], "Control Flow": [[1, "module-flowtest.control_flow"]], "ESAPI": [[1, "module-flowtest.ESAPI"]], "Executor": [[1, "module-flowtest.executor"]], "Function Call and Return": [[1, "function-call-and-return"]], "Flow Metrics": [[1, "module-flowtest.flow_metrics"]], "Flow Result": [[1, "module-flowtest.flow_result"]], "Flows": [[1, "module-flowtest.flows"]], "Adding Vectors": [[1, "adding-vectors"]], "Query Manager": [[1, "module-flowtest.query_manager"]], "Util": [[1, "module-flowtest.util"]], "Wire": [[1, "module-flowtest.wire"]], "Wiring Policy": [[1, "wiring-policy"]], "Version": [[1, "module-flowtest.version"]], "Flowtest documentation": [[2, "flowtest-documentation"]], "Contents:": [[2, null]], "Indices and tables": [[2, "indices-and-tables"]], "System Overview": [[3, "system-overview"]], "Object Lifecycles and responsibilities": [[3, "object-lifecycles-and-responsibilities"]], "Objects persisting across the entire scan run": [[3, "objects-persisting-across-the-entire-scan-run"]], "Objects persisting across the scan of a flow": [[3, "objects-persisting-across-the-scan-of-a-flow"]], "QueryProcessor": [[3, "queryprocessor"]], "Stack": [[3, "stack"]], "Frame": [[3, "frame"]], "Objects Persisting across a single file": [[3, "objects-persisting-across-a-single-file"]], "Parser": [[3, "parser"]], "BranchState": [[3, "branchstate"]], "Crawler": [[3, "crawler"]], "Important Data types and caches": [[3, "important-data-types-and-caches"]], "Important methods": [[3, "important-methods"]], "Problem Addressed": [[4, "problem-addressed"]], "How it works": [[4, "how-it-works"]], "Public Module": [[5, "public-module"]], "Contracts": [[5, "module-public.contracts"]], "Data Objects": [[5, "module-public.data_obj"]], "Enums": [[5, "module-public.enums"]], "Parsing Utilities": [[5, "module-public.parse_utils"]], "Queries": [[6, "queries"]], "Default Queries": [[6, "module-queries.default_query"]], "User Guide": [[7, "user-guide"]], "Installation": [[7, "installation"]], "Usage": [[7, "usage"]]}, "indexentries": {"ns_len (in module flow_parser.parse)": [[0, "flow_parser.parse.NS_LEN"]], "parser (class in flow_parser.parse)": [[0, "flow_parser.parse.Parser"]], "__init__() (flow_parser.parse.parser method)": [[0, "flow_parser.parse.Parser.__init__"]], "all_named_elems (flow_parser.parse.parser attribute)": [[0, "flow_parser.parse.Parser.all_named_elems"]], "build_vartype_from_elem() (in module flow_parser.parse)": [[0, "flow_parser.parse.build_vartype_from_elem"]], "declared_run_mode (flow_parser.parse.parser attribute)": [[0, "flow_parser.parse.Parser.declared_run_mode"]], "effective_run_mode (flow_parser.parse.parser attribute)": [[0, "flow_parser.parse.Parser.effective_run_mode"]], "flow_parser.parse": [[0, "module-flow_parser.parse"]], "flow_path (flow_parser.parse.parser attribute)": [[0, "flow_parser.parse.Parser.flow_path"]], "flow_type (flow_parser.parse.parser attribute)": [[0, "flow_parser.parse.Parser.flow_type"]], "get_all_indirect_tuples() (flow_parser.parse.parser method)": [[0, "flow_parser.parse.Parser.get_all_indirect_tuples"]], "get_all_traversable_flow_elements() (flow_parser.parse.parser method)": [[0, "flow_parser.parse.Parser.get_all_traversable_flow_elements"]], "get_by_name() (flow_parser.parse.parser method)": [[0, "flow_parser.parse.Parser.get_by_name"]], "get_flow_name() (flow_parser.parse.parser method)": [[0, "flow_parser.parse.Parser.get_flow_name"]], "get_flow_type() (flow_parser.parse.parser method)": [[0, "flow_parser.parse.Parser.get_flow_type"]], "get_formulas() (flow_parser.parse.parser method)": [[0, "flow_parser.parse.Parser.get_formulas"]], "get_input_field_elems() (flow_parser.parse.parser method)": [[0, "flow_parser.parse.Parser.get_input_field_elems"]], "get_input_output_elems() (flow_parser.parse.parser method)": [[0, "flow_parser.parse.Parser.get_input_output_elems"]], "get_input_variables() (flow_parser.parse.parser method)": [[0, "flow_parser.parse.Parser.get_input_variables"]], "get_root() (in module flow_parser.parse)": [[0, "flow_parser.parse.get_root"]], "get_run_mode() (flow_parser.parse.parser method)": [[0, "flow_parser.parse.Parser.get_run_mode"]], "get_start_elem() (flow_parser.parse.parser method)": [[0, "flow_parser.parse.Parser.get_start_elem"]], "get_templates() (flow_parser.parse.parser method)": [[0, "flow_parser.parse.Parser.get_templates"]], "input_variables (flow_parser.parse.parser attribute)": [[0, "flow_parser.parse.Parser.input_variables"]], "literal_var (flow_parser.parse.parser attribute)": [[0, "flow_parser.parse.Parser.literal_var"]], "logger (in module flow_parser.parse)": [[0, "flow_parser.parse.logger"]], "module": [[0, "module-flow_parser.parse"], [1, "module-flowtest.ESAPI"], [1, "module-flowtest.__main__"], [1, "module-flowtest.branch_state"], [1, "module-flowtest.control_flow"], [1, "module-flowtest.executor"], [1, "module-flowtest.flow_metrics"], [1, "module-flowtest.flow_result"], [1, "module-flowtest.flows"], [1, "module-flowtest.query_manager"], [1, "module-flowtest.util"], [1, "module-flowtest.version"], [1, "module-flowtest.wire"], [5, "module-public.contracts"], [5, "module-public.data_obj"], [5, "module-public.enums"], [5, "module-public.parse_utils"], [6, "module-queries.default_query"]], "ns (in module flow_parser.parse)": [[0, "flow_parser.parse.ns"]], "output_variables (flow_parser.parse.parser attribute)": [[0, "flow_parser.parse.Parser.output_variables"]], "resolve_by_name() (flow_parser.parse.parser method)": [[0, "flow_parser.parse.Parser.resolve_by_name"]], "root (flow_parser.parse.parser attribute)": [[0, "flow_parser.parse.Parser.root"]], "update() (flow_parser.parse.parser method)": [[0, "flow_parser.parse.Parser.update"]], "branchstate (class in flowtest.branch_state)": [[1, "flowtest.branch_state.BranchState"]], "curr_dir (in module flowtest.util)": [[1, "flowtest.util.CURR_DIR"]], "controlflowgraph (class in flowtest.control_flow)": [[1, "flowtest.control_flow.ControlFlowGraph"]], "crawlencoder (class in flowtest.control_flow)": [[1, "flowtest.control_flow.CrawlEncoder"]], "crawlschedule (class in flowtest.control_flow)": [[1, "flowtest.control_flow.CrawlSchedule"]], "crawler (class in flowtest.control_flow)": [[1, "flowtest.control_flow.Crawler"]], "follow_subflows (in module flowtest.executor)": [[1, "flowtest.executor.FOLLOW_SUBFLOWS"]], "flowvector (class in flowtest.flows)": [[1, "flowtest.flows.FlowVector"]], "frame (class in flowtest.executor)": [[1, "flowtest.executor.Frame"]], "initialization_comment (in module flowtest.branch_state)": [[1, "flowtest.branch_state.INITIALIZATION_COMMENT"]], "jsonserializable (class in flowtest.control_flow)": [[1, "flowtest.control_flow.JSONSerializable"]], "jump (class in flowtest.control_flow)": [[1, "flowtest.control_flow.Jump"]], "queryaction (class in flowtest.query_manager)": [[1, "flowtest.query_manager.QueryAction"]], "resultsprocessor (class in flowtest.flow_result)": [[1, "flowtest.flow_result.ResultsProcessor"]], "subflow_wire_comment (in module flowtest.branch_state)": [[1, "flowtest.branch_state.SUBFLOW_WIRE_COMMENT"]], "segment (class in flowtest.control_flow)": [[1, "flowtest.control_flow.Segment"]], "stack (class in flowtest.executor)": [[1, "flowtest.executor.Stack"]], "trust_carnac (in module flowtest.executor)": [[1, "flowtest.executor.TRUST_CARNAC"]], "try_carnac (in module flowtest.executor)": [[1, "flowtest.executor.TRY_CARNAC"]], "__init__() (flowtest.branch_state.branchstate method)": [[1, "flowtest.branch_state.BranchState.__init__"]], "__init__() (flowtest.control_flow.controlflowgraph method)": [[1, "flowtest.control_flow.ControlFlowGraph.__init__"]], "__init__() (flowtest.control_flow.crawlschedule method)": [[1, "flowtest.control_flow.CrawlSchedule.__init__"]], "__init__() (flowtest.control_flow.crawler method)": [[1, "flowtest.control_flow.Crawler.__init__"]], "__init__() (flowtest.control_flow.jsonserializable method)": [[1, "flowtest.control_flow.JSONSerializable.__init__"]], "__init__() (flowtest.control_flow.jump method)": [[1, "flowtest.control_flow.Jump.__init__"]], "__init__() (flowtest.control_flow.segment method)": [[1, "flowtest.control_flow.Segment.__init__"]], "__init__() (flowtest.executor.frame method)": [[1, "flowtest.executor.Frame.__init__"]], "__init__() (flowtest.executor.stack method)": [[1, "flowtest.executor.Stack.__init__"]], "__init__() (flowtest.flow_result.resultsprocessor method)": [[1, "flowtest.flow_result.ResultsProcessor.__init__"]], "__init__() (flowtest.flows.flowvector method)": [[1, "flowtest.flows.FlowVector.__init__"]], "accept() (flowtest.control_flow.segment method)": [[1, "flowtest.control_flow.Segment.accept"]], "add_results() (flowtest.flow_result.resultsprocessor method)": [[1, "flowtest.flow_result.ResultsProcessor.add_results"]], "add_to_query_config() (in module flowtest.flow_metrics)": [[1, "flowtest.flow_metrics.add_to_query_config"]], "add_vector() (flowtest.flows.flowvector method)": [[1, "flowtest.flows.FlowVector.add_vector"]], "add_vectors_from_other_flow() (flowtest.branch_state.branchstate method)": [[1, "flowtest.branch_state.BranchState.add_vectors_from_other_flow"]], "all_flow_paths (flowtest.executor.frame attribute)": [[1, "flowtest.executor.Frame.all_flow_paths"]], "all_flow_paths (flowtest.executor.stack attribute)": [[1, "flowtest.executor.Stack.all_flow_paths"]], "build() (flowtest.executor.frame class method)": [[1, "flowtest.executor.Frame.build"]], "call_carnac() (in module flowtest.executor)": [[1, "flowtest.executor.call_carnac"]], "check_dir_exists() (in module flowtest.__main__)": [[1, "flowtest.__main__.check_dir_exists"]], "check_file_exists() (in module flowtest.__main__)": [[1, "flowtest.__main__.check_file_exists"]], "check_not_exist() (in module flowtest.__main__)": [[1, "flowtest.__main__.check_not_exist"]], "child_spawned (flowtest.executor.frame attribute)": [[1, "flowtest.executor.Frame.child_spawned"]], "count_issues() (in module flowtest.flow_metrics)": [[1, "flowtest.flow_metrics.count_issues"]], "crawl_iter() (in module flowtest.control_flow)": [[1, "flowtest.control_flow.crawl_iter"]], "crawl_schedule (flowtest.control_flow.crawler attribute)": [[1, "flowtest.control_flow.Crawler.crawl_schedule"]], "crawler (flowtest.executor.frame attribute)": [[1, "flowtest.executor.Frame.crawler"]], "create_module() (in module flowtest.query_manager)": [[1, "flowtest.query_manager.create_module"]], "current_crawl_step (flowtest.branch_state.branchstate attribute)": [[1, "flowtest.branch_state.BranchState.current_crawl_step"]], "current_elem (flowtest.branch_state.branchstate attribute)": [[1, "flowtest.branch_state.BranchState.current_elem"]], "current_elem_name (flowtest.branch_state.branchstate attribute)": [[1, "flowtest.branch_state.BranchState.current_elem_name"]], "current_frame (flowtest.executor.stack attribute)": [[1, "flowtest.executor.Stack.current_frame"]], "current_step (flowtest.control_flow.crawler attribute)": [[1, "flowtest.control_flow.Crawler.current_step"]], "default() (flowtest.control_flow.crawlencoder method)": [[1, "flowtest.control_flow.CrawlEncoder.default"]], "dump_json() (flowtest.flow_result.resultsprocessor method)": [[1, "flowtest.flow_result.ResultsProcessor.dump_json"]], "execute() (flowtest.executor.frame method)": [[1, "flowtest.executor.Frame.execute"]], "filter_input_variables() (flowtest.branch_state.branchstate method)": [[1, "flowtest.branch_state.BranchState.filter_input_variables"]], "filter_maps() (flowtest.branch_state.branchstate method)": [[1, "flowtest.branch_state.BranchState.filter_maps"]], "flow_name (flowtest.branch_state.branchstate attribute)": [[1, "flowtest.branch_state.BranchState.flow_name"]], "flow_name (flowtest.executor.frame attribute)": [[1, "flowtest.executor.Frame.flow_name"]], "flow_path (flowtest.branch_state.branchstate attribute)": [[1, "flowtest.branch_state.BranchState.flow_path"]], "flow_path (flowtest.executor.frame attribute)": [[1, "flowtest.executor.Frame.flow_path"]], "flowtest.esapi": [[1, "module-flowtest.ESAPI"]], "flowtest.__main__": [[1, "module-flowtest.__main__"]], "flowtest.branch_state": [[1, "module-flowtest.branch_state"]], "flowtest.control_flow": [[1, "module-flowtest.control_flow"]], "flowtest.executor": [[1, "module-flowtest.executor"]], "flowtest.flow_metrics": [[1, "module-flowtest.flow_metrics"]], "flowtest.flow_result": [[1, "module-flowtest.flow_result"]], "flowtest.flows": [[1, "module-flowtest.flows"]], "flowtest.query_manager": [[1, "module-flowtest.query_manager"]], "flowtest.util": [[1, "module-flowtest.util"]], "flowtest.version": [[1, "module-flowtest.version"]], "flowtest.wire": [[1, "module-flowtest.wire"]], "formula_map (flowtest.branch_state.branchstate attribute)": [[1, "flowtest.branch_state.BranchState.formula_map"]], "from_flows() (flowtest.flows.flowvector class method)": [[1, "flowtest.flows.FlowVector.from_flows"]], "from_parser() (flowtest.branch_state.branchstate class method)": [[1, "flowtest.branch_state.BranchState.from_parser"]], "from_parser() (flowtest.control_flow.crawler class method)": [[1, "flowtest.control_flow.Crawler.from_parser"]], "gen_result_dict() (flowtest.flow_result.resultsprocessor method)": [[1, "flowtest.flow_result.ResultsProcessor.gen_result_dict"]], "get_all_output_vectors() (flowtest.branch_state.branchstate method)": [[1, "flowtest.branch_state.BranchState.get_all_output_vectors"]], "get_consolidated_output_vars() (flowtest.executor.frame method)": [[1, "flowtest.executor.Frame.get_consolidated_output_vars"]], "get_crawl_schedule() (in module flowtest.control_flow)": [[1, "flowtest.control_flow.get_crawl_schedule"]], "get_crawl_step() (flowtest.control_flow.crawler method)": [[1, "flowtest.control_flow.Crawler.get_crawl_step"]], "get_current_elem() (flowtest.branch_state.branchstate method)": [[1, "flowtest.branch_state.BranchState.get_current_elem"]], "get_current_elem_name() (flowtest.branch_state.branchstate method)": [[1, "flowtest.branch_state.BranchState.get_current_elem_name"]], "get_cx_xml_str() (flowtest.flow_result.resultsprocessor method)": [[1, "flowtest.flow_result.ResultsProcessor.get_cx_xml_str"]], "get_flow_paths() (in module flowtest.__main__)": [[1, "flowtest.__main__.get_flow_paths"]], "get_flows_by_prop() (flowtest.flows.flowvector method)": [[1, "flowtest.flows.FlowVector.get_flows_by_prop"]], "get_flows_from_sources() (flowtest.branch_state.branchstate method)": [[1, "flowtest.branch_state.BranchState.get_flows_from_sources"]], "get_flows_in_dir() (in module flowtest.util)": [[1, "flowtest.util.get_flows_in_dir"]], "get_issues_for_org() (in module flowtest.flow_metrics)": [[1, "flowtest.flow_metrics.get_issues_for_org"]], "get_json_str() (flowtest.flow_result.resultsprocessor method)": [[1, "flowtest.flow_result.ResultsProcessor.get_json_str"]], "get_label() (in module flowtest.util)": [[1, "flowtest.util.get_label"]], "get_last_ancestor() (flowtest.control_flow.crawler method)": [[1, "flowtest.control_flow.Crawler.get_last_ancestor"]], "get_or_make_vector() (flowtest.branch_state.branchstate method)": [[1, "flowtest.branch_state.BranchState.get_or_make_vector"]], "get_parser() (flowtest.branch_state.branchstate method)": [[1, "flowtest.branch_state.BranchState.get_parser"]], "get_software_presets() (in module flowtest.flow_metrics)": [[1, "flowtest.flow_metrics.get_software_presets"]], "handle_auto_store() (in module flowtest.wire)": [[1, "flowtest.wire.handle_auto_store"]], "handle_subflows() (flowtest.executor.frame method)": [[1, "flowtest.executor.Frame.handle_subflows"]], "history_maps (flowtest.control_flow.crawler attribute)": [[1, "flowtest.control_flow.Crawler.history_maps"]], "html_encode() (in module flowtest.esapi)": [[1, "flowtest.ESAPI.html_encode"]], "inputs (flowtest.executor.frame attribute)": [[1, "flowtest.executor.Frame.inputs"]], "is_in_map() (flowtest.branch_state.branchstate method)": [[1, "flowtest.branch_state.BranchState.is_in_map"]], "legal_sql_escape() (in module flowtest.esapi)": [[1, "flowtest.ESAPI.legal_sql_escape"]], "load_crawl_step() (flowtest.branch_state.branchstate method)": [[1, "flowtest.branch_state.BranchState.load_crawl_step"]], "logger (in module flowtest.branch_state)": [[1, "flowtest.branch_state.logger"]], "logger (in module flowtest.executor)": [[1, "flowtest.executor.logger"]], "logger (in module flowtest.wire)": [[1, "flowtest.wire.logger"]], "main() (in module flowtest.__main__)": [[1, "flowtest.__main__.main"]], "make_id() (in module flowtest.util)": [[1, "flowtest.util.make_id"]], "parent_subflow (flowtest.executor.frame attribute)": [[1, "flowtest.executor.Frame.parent_subflow"]], "parse_args() (in module flowtest.__main__)": [[1, "flowtest.__main__.parse_args"]], "parse_flow() (in module flowtest.executor)": [[1, "flowtest.executor.parse_flow"]], "parse_results() (in module flowtest.flow_metrics)": [[1, "flowtest.flow_metrics.parse_results"]], "parser (flowtest.branch_state.branchstate attribute)": [[1, "flowtest.branch_state.BranchState.parser"]], "parser (flowtest.executor.frame attribute)": [[1, "flowtest.executor.Frame.parser"]], "pop() (flowtest.executor.stack method)": [[1, "flowtest.executor.Stack.pop"]], "prediction (flowtest.executor.frame attribute)": [[1, "flowtest.executor.Frame.prediction"]], "propagate() (in module flowtest.util)": [[1, "flowtest.util.propagate"]], "propagate_flows() (flowtest.branch_state.branchstate method)": [[1, "flowtest.branch_state.BranchState.propagate_flows"]], "push() (flowtest.executor.stack method)": [[1, "flowtest.executor.Stack.push"]], "push_via_flow() (flowtest.flows.flowvector method)": [[1, "flowtest.flows.FlowVector.push_via_flow"]], "query_manager (flowtest.executor.frame attribute)": [[1, "flowtest.executor.Frame.query_manager"]], "query_manager (flowtest.executor.stack attribute)": [[1, "flowtest.executor.Stack.query_manager"]], "report_dict() (flowtest.flows.flowvector method)": [[1, "flowtest.flows.FlowVector.report_dict"]], "resolve_name() (in module flowtest.util)": [[1, "flowtest.util.resolve_name"]], "resolved_subflows (flowtest.executor.frame attribute)": [[1, "flowtest.executor.Frame.resolved_subflows"]], "resolved_subflows (flowtest.executor.stack attribute)": [[1, "flowtest.executor.Stack.resolved_subflows"]], "reverse_map() (in module flowtest.flow_metrics)": [[1, "flowtest.flow_metrics.reverse_map"]], "run() (flowtest.executor.stack method)": [[1, "flowtest.executor.Stack.run"]], "serialize() (in module flowtest.flow_metrics)": [[1, "flowtest.flow_metrics.serialize"]], "setup_logger() (in module flowtest.__main__)": [[1, "flowtest.__main__.setup_logger"]], "short_report() (flowtest.flows.flowvector method)": [[1, "flowtest.flows.FlowVector.short_report"]], "spawn_child_frame() (flowtest.executor.frame method)": [[1, "flowtest.executor.Frame.spawn_child_frame"]], "sql_enc_html_dec() (in module flowtest.esapi)": [[1, "flowtest.ESAPI.sql_enc_html_dec"]], "sql_escape() (in module flowtest.esapi)": [[1, "flowtest.ESAPI.sql_escape"]], "state (flowtest.executor.frame attribute)": [[1, "flowtest.executor.Frame.state"]], "subflow_input_cache (flowtest.executor.frame attribute)": [[1, "flowtest.executor.Frame.subflow_input_cache"]], "subflow_output_variable_cache (flowtest.executor.frame attribute)": [[1, "flowtest.executor.Frame.subflow_output_variable_cache"]], "terminal_steps (flowtest.control_flow.crawler attribute)": [[1, "flowtest.control_flow.Crawler.terminal_steps"]], "total_steps (flowtest.control_flow.crawler attribute)": [[1, "flowtest.control_flow.Crawler.total_steps"]], "update_parent_frame() (flowtest.executor.frame method)": [[1, "flowtest.executor.Frame.update_parent_frame"]], "wire() (in module flowtest.wire)": [[1, "flowtest.wire.wire"]], "wire_assignment() (in module flowtest.wire)": [[1, "flowtest.wire.wire_assignment"]], "wire_collection_processor() (in module flowtest.wire)": [[1, "flowtest.wire.wire_collection_processor"]], "wire_loop() (in module flowtest.wire)": [[1, "flowtest.wire.wire_loop"]], "write_html() (flowtest.flow_result.resultsprocessor method)": [[1, "flowtest.flow_result.ResultsProcessor.write_html"]], "branchvisitor (class in public.data_obj)": [[5, "public.data_obj.BranchVisitor"]], "connector (in module public.parse_utils)": [[5, "public.parse_utils.CONNECTOR"]], "conn_list (in module public.parse_utils)": [[5, "public.parse_utils.CONN_LIST"]], "conntype (class in public.enums)": [[5, "public.enums.ConnType"]], "crawlstep (class in public.data_obj)": [[5, "public.data_obj.CrawlStep"]], "default_conn (in module public.parse_utils)": [[5, "public.parse_utils.DEFAULT_CONN"]], "datainfluencepath (class in public.data_obj)": [[5, "public.data_obj.DataInfluencePath"]], "datainfluencestatement (class in public.data_obj)": [[5, "public.data_obj.DataInfluenceStatement"]], "datatype (class in public.enums)": [[5, "public.enums.DataType"]], "fault_connector (in module public.parse_utils)": [[5, "public.parse_utils.FAULT_CONNECTOR"]], "flowparser (class in public.contracts)": [[5, "public.contracts.FlowParser"]], "flowtype (class in public.enums)": [[5, "public.enums.FlowType"]], "flowvalue (class in public.enums)": [[5, "public.enums.FlowValue"]], "influencestatementencoder (class in public.data_obj)": [[5, "public.data_obj.InfluenceStatementEncoder"]], "next_value_connector (in module public.parse_utils)": [[5, "public.parse_utils.NEXT_VALUE_CONNECTOR"]], "no_more_conn (in module public.parse_utils)": [[5, "public.parse_utils.NO_MORE_CONN"]], "ns_len (in module public.parse_utils)": [[5, "public.parse_utils.NS_LEN"]], "preset (class in public.data_obj)": [[5, "public.data_obj.Preset"]], "querydescription (class in public.data_obj)": [[5, "public.data_obj.QueryDescription"]], "queryprocessor (class in public.contracts)": [[5, "public.contracts.QueryProcessor"]], "queryresult (class in public.data_obj)": [[5, "public.data_obj.QueryResult"]], "referencetype (class in public.enums)": [[5, "public.enums.ReferenceType"]], "runmode (class in public.enums)": [[5, "public.enums.RunMode"]], "string_literal_token (in module public.parse_utils)": [[5, "public.parse_utils.STRING_LITERAL_TOKEN"]], "severity (class in public.enums)": [[5, "public.enums.Severity"]], "state (class in public.contracts)": [[5, "public.contracts.State"]], "variabletype (class in public.data_obj)": [[5, "public.data_obj.VariableType"]], "__init__() (public.contracts.queryprocessor method)": [[5, "public.contracts.QueryProcessor.__init__"]], "__init__() (public.data_obj.branchvisitor method)": [[5, "public.data_obj.BranchVisitor.__init__"]], "__init__() (public.data_obj.crawlstep method)": [[5, "public.data_obj.CrawlStep.__init__"]], "__init__() (public.data_obj.datainfluencepath method)": [[5, "public.data_obj.DataInfluencePath.__init__"]], "__init__() (public.data_obj.datainfluencestatement method)": [[5, "public.data_obj.DataInfluenceStatement.__init__"]], "__init__() (public.data_obj.preset method)": [[5, "public.data_obj.Preset.__init__"]], "__init__() (public.data_obj.querydescription method)": [[5, "public.data_obj.QueryDescription.__init__"]], "__init__() (public.data_obj.queryresult method)": [[5, "public.data_obj.QueryResult.__init__"]], "__init__() (public.data_obj.variabletype method)": [[5, "public.data_obj.VariableType.__init__"]], "combine() (public.data_obj.datainfluencepath class method)": [[5, "public.data_obj.DataInfluencePath.combine"]], "default() (public.data_obj.influencestatementencoder method)": [[5, "public.data_obj.InfluenceStatementEncoder.default"]], "get_assignment_statement_dicts() (in module public.parse_utils)": [[5, "public.parse_utils.get_assignment_statement_dicts"]], "get_by_tag() (in module public.parse_utils)": [[5, "public.parse_utils.get_by_tag"]], "get_conn_target_map() (in module public.parse_utils)": [[5, "public.parse_utils.get_conn_target_map"]], "get_filters() (in module public.parse_utils)": [[5, "public.parse_utils.get_filters"]], "get_input_assignments() (in module public.parse_utils)": [[5, "public.parse_utils.get_input_assignments"]], "get_input_field_elems() (public.contracts.flowparser method)": [[5, "public.contracts.FlowParser.get_input_field_elems"]], "get_input_variables() (public.contracts.flowparser method)": [[5, "public.contracts.FlowParser.get_input_variables"]], "get_name() (in module public.parse_utils)": [[5, "public.parse_utils.get_name"]], "get_named_elems() (in module public.parse_utils)": [[5, "public.parse_utils.get_named_elems"]], "get_sinks_from_field_values() (in module public.parse_utils)": [[5, "public.parse_utils.get_sinks_from_field_values"]], "get_subflow_input_map() (in module public.parse_utils)": [[5, "public.parse_utils.get_subflow_input_map"]], "get_subflow_output_map() (in module public.parse_utils)": [[5, "public.parse_utils.get_subflow_output_map"]], "handle_crawl_element() (public.contracts.queryprocessor method)": [[5, "public.contracts.QueryProcessor.handle_crawl_element"]], "handle_final() (public.contracts.queryprocessor method)": [[5, "public.contracts.QueryProcessor.handle_final"]], "handle_flow_enter() (public.contracts.queryprocessor method)": [[5, "public.contracts.QueryProcessor.handle_flow_enter"]], "is_decision() (in module public.parse_utils)": [[5, "public.parse_utils.is_decision"]], "is_goto_connector() (in module public.parse_utils)": [[5, "public.parse_utils.is_goto_connector"]], "is_loop() (in module public.parse_utils)": [[5, "public.parse_utils.is_loop"]], "logger (in module public.parse_utils)": [[5, "public.parse_utils.logger"]], "ns (in module public.parse_utils)": [[5, "public.parse_utils.ns"]], "parse_expression() (in module public.parse_utils)": [[5, "public.parse_utils.parse_expression"]], "public.contracts": [[5, "module-public.contracts"]], "public.data_obj": [[5, "module-public.data_obj"]], "public.enums": [[5, "module-public.enums"]], "public.parse_utils": [[5, "module-public.parse_utils"]], "reg (in module public.parse_utils)": [[5, "public.parse_utils.reg"]], "report_influence_tuples() (public.data_obj.datainfluencepath method)": [[5, "public.data_obj.DataInfluencePath.report_influence_tuples"]], "set_preset_name() (public.contracts.queryprocessor method)": [[5, "public.contracts.QueryProcessor.set_preset_name"]], "short_report() (public.data_obj.datainfluencepath method)": [[5, "public.data_obj.DataInfluencePath.short_report"]], "defaultqueryprocessor (class in queries.default_query)": [[6, "queries.default_query.DefaultQueryProcessor"]], "__init__() (queries.default_query.defaultqueryprocessor method)": [[6, "queries.default_query.DefaultQueryProcessor.__init__"]], "flow_paths (queries.default_query.defaultqueryprocessor attribute)": [[6, "queries.default_query.DefaultQueryProcessor.flow_paths"]], "get_sources() (in module queries.default_query)": [[6, "queries.default_query.get_sources"]], "handle_crawl_element() (queries.default_query.defaultqueryprocessor method)": [[6, "queries.default_query.DefaultQueryProcessor.handle_crawl_element"]], "handle_final() (queries.default_query.defaultqueryprocessor method)": [[6, "queries.default_query.DefaultQueryProcessor.handle_final"]], "handle_flow_enter() (queries.default_query.defaultqueryprocessor method)": [[6, "queries.default_query.DefaultQueryProcessor.handle_flow_enter"]], "parser (queries.default_query.defaultqueryprocessor attribute)": [[6, "queries.default_query.DefaultQueryProcessor.parser"]], "preset (queries.default_query.defaultqueryprocessor attribute)": [[6, "queries.default_query.DefaultQueryProcessor.preset"]], "process_element() (queries.default_query.defaultqueryprocessor method)": [[6, "queries.default_query.DefaultQueryProcessor.process_element"]], "process_influencers() (queries.default_query.defaultqueryprocessor method)": [[6, "queries.default_query.DefaultQueryProcessor.process_influencers"]], "queries.default_query": [[6, "module-queries.default_query"]], "root (queries.default_query.defaultqueryprocessor attribute)": [[6, "queries.default_query.DefaultQueryProcessor.root"]], "set_preset_name() (queries.default_query.defaultqueryprocessor method)": [[6, "queries.default_query.DefaultQueryProcessor.set_preset_name"]], "sources (queries.default_query.defaultqueryprocessor attribute)": [[6, "queries.default_query.DefaultQueryProcessor.sources"]]}})